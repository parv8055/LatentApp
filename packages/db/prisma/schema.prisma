// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(uuid())
  number   String     @unique
  name     String
  verified Boolean    @default(false)
  Booking  Booking[]
  Payments Payments[]
}

enum AdminType {
  SuperAdmin
  Creator
}

model Admin {
  id       String  @id @default(uuid())
  number   String  @unique
  name     String
  verified Boolean @default(false)
  Event    Event[]
  type     AdminType
}

model Event {
  id          String     @id @default(uuid())
  name        String
  banner      String
  description String
  adminId     String
  admin       Admin      @relation(fields: [adminId], references: [id])
  Booking     Booking[]
  Payments    Payments[]
  startTime   DateTime
  locationId  String
  location Location @relation(fields: [locationId], references: [id])
}

model Booking {
  id      String @id @default(uuid())
  eventId String
  userId  String
  seats   Seat[]
  user    User   @relation(fields: [userId], references: [id])
  event   Event  @relation(fields: [eventId], references: [id])
}

model Seat {
  id         String   @id @default(uuid())
  seatTypeId String
  bookingId  String
  qr         String
  seatType   SeatType @relation(fields: [seatTypeId], references: [id])
  booking    Booking  @relation(fields: [bookingId], references: [id])
}

model SeatType {
  id          String @id @default(uuid())
  name        String
  description String
  event       String
  price       Int
  seats       Seat[]
}

model Payments {
  id      String       @id @default(uuid())
  eventId String
  userId  String
  status  PaymentState
  event   Event        @relation(fields: [eventId], references: [id])
  user    User         @relation(fields: [userId], references: [id])
}

model Location {
  id          String  @id @default(uuid())
  name        String
  description String
  imageUrl    String
  event       Event[]
}

enum PaymentState {
  PENDING
  SUCCESS
  FAILED
}